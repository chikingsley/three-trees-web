/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    testimonials: Testimonial;
    programTypes: ProgramType;
    clients: Client;
    services: Service;
    locations: Location;
    blogPosts: BlogPost;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    programTypes: ProgramTypesSelect<false> | ProgramTypesSelect<true>;
    clients: ClientsSelect<false> | ClientsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    blogPosts: BlogPostsSelect<false> | BlogPostsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  name: string;
  title: string;
  location?: string | null;
  quote: string;
  fullTestimonial?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image?: (number | null) | Media;
  featured?: boolean | null;
  date?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programTypes".
 */
export interface ProgramType {
  id: number;
  title: string;
  slug: string;
  subtitle?: string | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  heroImage: number | Media;
  shortDescription: string;
  icon?: string | null;
  featuredTestimonials?: (number | Testimonial)[] | null;
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  callToAction: {
    text: string;
    url: string;
    style?: ('primary' | 'secondary') | null;
  };
  additionalContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients".
 */
export interface Client {
  id: number;
  firstName: string;
  lastName: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  title: string;
  slug: string;
  programType: number | ProgramType;
  heroImage: number | Media;
  summary: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  benefits?:
    | {
        title: string;
        description: string;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        title: string;
        description: string;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  programDetails: {
    duration: string;
    format?:
      | {
          formatType?: string | null;
          id?: string | null;
        }[]
      | null;
    schedule?: string | null;
    certification?: string | null;
    requirements?:
      | {
          requirement?: string | null;
          id?: string | null;
        }[]
      | null;
    pricing?: string | null;
  };
  faqs?:
    | {
        question: string;
        answer: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  testimonials?: (number | Testimonial)[] | null;
  relatedServices?: (number | Service)[] | null;
  availability?: {
    locations?: (number | Location)[] | null;
    notes?: string | null;
  };
  callToAction: {
    text: string;
    url: string;
    style?: ('primary' | 'secondary') | null;
  };
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  slug: string;
  type: 'state' | 'county' | 'city';
  parent?: (number | null) | Location;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  heroImage?: (number | null) | Media;
  services?: (number | Service)[] | null;
  address?: {
    street?: string | null;
    city?: string | null;
    state?: string | null;
    zipCode?: string | null;
  };
  contactInformation?: {
    phone?: string | null;
    email?: string | null;
    hours?: string | null;
  };
  localPartners?:
    | {
        name: string;
        role?: string | null;
        contact?: string | null;
        id?: string | null;
      }[]
    | null;
  localRequirements?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  testimonials?: (number | Testimonial)[] | null;
  faqs?:
    | {
        question: string;
        answer: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
    localKeywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPosts".
 */
export interface BlogPost {
  id: number;
  title: string;
  slug: string;
  featuredImage: number | Media;
  status: 'draft' | 'published';
  publishedDate: string;
  author: number | User;
  categories?:
    | {
        category: string;
        id?: string | null;
      }[]
    | null;
  summary: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPrograms?: (number | ProgramType)[] | null;
  relatedServices?: (number | Service)[] | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'programTypes';
        value: number | ProgramType;
      } | null)
    | ({
        relationTo: 'clients';
        value: number | Client;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'blogPosts';
        value: number | BlogPost;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  location?: T;
  quote?: T;
  fullTestimonial?: T;
  image?: T;
  featured?: T;
  date?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programTypes_select".
 */
export interface ProgramTypesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  subtitle?: T;
  description?: T;
  heroImage?: T;
  shortDescription?: T;
  icon?: T;
  featuredTestimonials?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
      };
  callToAction?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  additionalContent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients_select".
 */
export interface ClientsSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  programType?: T;
  heroImage?: T;
  summary?: T;
  description?: T;
  benefits?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  programDetails?:
    | T
    | {
        duration?: T;
        format?:
          | T
          | {
              formatType?: T;
              id?: T;
            };
        schedule?: T;
        certification?: T;
        requirements?:
          | T
          | {
              requirement?: T;
              id?: T;
            };
        pricing?: T;
      };
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  testimonials?: T;
  relatedServices?: T;
  availability?:
    | T
    | {
        locations?: T;
        notes?: T;
      };
  callToAction?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  type?: T;
  parent?: T;
  description?: T;
  heroImage?: T;
  services?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        state?: T;
        zipCode?: T;
      };
  contactInformation?:
    | T
    | {
        phone?: T;
        email?: T;
        hours?: T;
      };
  localPartners?:
    | T
    | {
        name?: T;
        role?: T;
        contact?: T;
        id?: T;
      };
  localRequirements?: T;
  testimonials?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        localKeywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPosts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  featuredImage?: T;
  status?: T;
  publishedDate?: T;
  author?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  summary?: T;
  content?: T;
  relatedPrograms?: T;
  relatedServices?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}